
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN COMMA DECIMAL EQ FLOAT FOR GT ID IF IN INPUT INT LBRACE LPAREN LT NUMBER PLUS RANGE RBRACE RPAREN SEMICOLON STRING TEXT WHILEprogram : statementsstatements : statement\n                      | statement statementsstatement : declaration\n                     | assignment\n                     | if_statement\n                     | while_statement\n                     | for_statement\n                     | input_statement\n                     | increment_statementdeclaration : INT ID ASSIGN NUMBER SEMICOLON\n                       | FLOAT ID ASSIGN DECIMAL SEMICOLON\n                       | STRING ID ASSIGN TEXT SEMICOLON\n                       | FLOAT ID ASSIGN NUMBER SEMICOLONassignment : ID ASSIGN expression SEMICOLONif_statement : IF LPAREN condition RPAREN LBRACE statements RBRACEwhile_statement : WHILE LPAREN condition RPAREN LBRACE statements RBRACEfor_statement : FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN LBRACE statements RBRACEcondition : expression EQ expression\n                     | expression GT expression\n                     | expression LT expression\n                     | condition AND conditionexpression : NUMBER\n                      | DECIMAL\n                      | IDinput_statement : INPUT LPAREN TEXT RPAREN SEMICOLONincrement_statement : ID PLUS SEMICOLON'
    
_lr_action_items = {'INT':([0,3,4,5,6,7,8,9,10,34,43,55,56,57,58,59,64,66,70,71,77,79,],[11,11,-4,-5,-6,-7,-8,-9,-10,-27,-15,-11,-12,-14,-13,11,11,-26,-16,-17,11,-18,]),'FLOAT':([0,3,4,5,6,7,8,9,10,34,43,55,56,57,58,59,64,66,70,71,77,79,],[13,13,-4,-5,-6,-7,-8,-9,-10,-27,-15,-11,-12,-14,-13,13,13,-26,-16,-17,13,-18,]),'STRING':([0,3,4,5,6,7,8,9,10,34,43,55,56,57,58,59,64,66,70,71,77,79,],[14,14,-4,-5,-6,-7,-8,-9,-10,-27,-15,-11,-12,-14,-13,14,14,-26,-16,-17,14,-18,]),'ID':([0,3,4,5,6,7,8,9,10,11,13,14,21,25,26,27,34,43,48,49,50,51,55,56,57,58,59,64,66,70,71,77,79,],[12,12,-4,-5,-6,-7,-8,-9,-10,20,23,24,30,30,30,40,-27,-15,30,30,30,30,-11,-12,-14,-13,12,12,-26,-16,-17,12,-18,]),'IF':([0,3,4,5,6,7,8,9,10,34,43,55,56,57,58,59,64,66,70,71,77,79,],[15,15,-4,-5,-6,-7,-8,-9,-10,-27,-15,-11,-12,-14,-13,15,15,-26,-16,-17,15,-18,]),'WHILE':([0,3,4,5,6,7,8,9,10,34,43,55,56,57,58,59,64,66,70,71,77,79,],[16,16,-4,-5,-6,-7,-8,-9,-10,-27,-15,-11,-12,-14,-13,16,16,-26,-16,-17,16,-18,]),'FOR':([0,3,4,5,6,7,8,9,10,34,43,55,56,57,58,59,64,66,70,71,77,79,],[17,17,-4,-5,-6,-7,-8,-9,-10,-27,-15,-11,-12,-14,-13,17,17,-26,-16,-17,17,-18,]),'INPUT':([0,3,4,5,6,7,8,9,10,34,43,55,56,57,58,59,64,66,70,71,77,79,],[18,18,-4,-5,-6,-7,-8,-9,-10,-27,-15,-11,-12,-14,-13,18,18,-26,-16,-17,18,-18,]),'$end':([1,2,3,4,5,6,7,8,9,10,19,34,43,55,56,57,58,66,70,71,79,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-3,-27,-15,-11,-12,-14,-13,-26,-16,-17,-18,]),'RBRACE':([3,4,5,6,7,8,9,10,19,34,43,55,56,57,58,66,67,68,70,71,78,79,],[-2,-4,-5,-6,-7,-8,-9,-10,-3,-27,-15,-11,-12,-14,-13,-26,70,71,-16,-17,79,-18,]),'ASSIGN':([12,20,23,24,],[21,29,35,36,]),'PLUS':([12,],[22,]),'LPAREN':([15,16,17,18,65,],[25,26,27,28,69,]),'NUMBER':([21,25,26,29,35,48,49,50,51,69,73,],[32,32,32,42,45,32,32,32,32,72,74,]),'DECIMAL':([21,25,26,35,48,49,50,51,],[33,33,33,44,33,33,33,33,]),'SEMICOLON':([22,30,31,32,33,42,44,45,46,54,],[34,-25,43,-23,-24,55,56,57,58,66,]),'TEXT':([28,36,],[41,46,]),'EQ':([30,32,33,38,],[-25,-23,-24,49,]),'GT':([30,32,33,38,],[-25,-23,-24,50,]),'LT':([30,32,33,38,],[-25,-23,-24,51,]),'RPAREN':([30,32,33,37,39,41,60,61,62,63,74,75,],[-25,-23,-24,47,52,54,-22,-19,-20,-21,75,76,]),'AND':([30,32,33,37,39,60,61,62,63,],[-25,-23,-24,48,48,48,-19,-20,-21,]),'IN':([40,],[53,]),'LBRACE':([47,52,76,],[59,64,77,]),'RANGE':([53,],[65,]),'COMMA':([72,],[73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,59,64,77,],[2,19,67,68,78,]),'statement':([0,3,59,64,77,],[3,3,3,3,3,]),'declaration':([0,3,59,64,77,],[4,4,4,4,4,]),'assignment':([0,3,59,64,77,],[5,5,5,5,5,]),'if_statement':([0,3,59,64,77,],[6,6,6,6,6,]),'while_statement':([0,3,59,64,77,],[7,7,7,7,7,]),'for_statement':([0,3,59,64,77,],[8,8,8,8,8,]),'input_statement':([0,3,59,64,77,],[9,9,9,9,9,]),'increment_statement':([0,3,59,64,77,],[10,10,10,10,10,]),'expression':([21,25,26,48,49,50,51,],[31,38,38,38,61,62,63,]),'condition':([25,26,48,],[37,39,60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analizador.py',90),
  ('statements -> statement','statements',1,'p_statements','analizador.py',94),
  ('statements -> statement statements','statements',2,'p_statements','analizador.py',95),
  ('statement -> declaration','statement',1,'p_statement','analizador.py',102),
  ('statement -> assignment','statement',1,'p_statement','analizador.py',103),
  ('statement -> if_statement','statement',1,'p_statement','analizador.py',104),
  ('statement -> while_statement','statement',1,'p_statement','analizador.py',105),
  ('statement -> for_statement','statement',1,'p_statement','analizador.py',106),
  ('statement -> input_statement','statement',1,'p_statement','analizador.py',107),
  ('statement -> increment_statement','statement',1,'p_statement','analizador.py',108),
  ('declaration -> INT ID ASSIGN NUMBER SEMICOLON','declaration',5,'p_declaration','analizador.py',112),
  ('declaration -> FLOAT ID ASSIGN DECIMAL SEMICOLON','declaration',5,'p_declaration','analizador.py',113),
  ('declaration -> STRING ID ASSIGN TEXT SEMICOLON','declaration',5,'p_declaration','analizador.py',114),
  ('declaration -> FLOAT ID ASSIGN NUMBER SEMICOLON','declaration',5,'p_declaration','analizador.py',115),
  ('assignment -> ID ASSIGN expression SEMICOLON','assignment',4,'p_assignment','analizador.py',127),
  ('if_statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE','if_statement',7,'p_if_statement','analizador.py',143),
  ('while_statement -> WHILE LPAREN condition RPAREN LBRACE statements RBRACE','while_statement',7,'p_while_statement','analizador.py',147),
  ('for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN LBRACE statements RBRACE','for_statement',14,'p_for_statement','analizador.py',151),
  ('condition -> expression EQ expression','condition',3,'p_condition','analizador.py',155),
  ('condition -> expression GT expression','condition',3,'p_condition','analizador.py',156),
  ('condition -> expression LT expression','condition',3,'p_condition','analizador.py',157),
  ('condition -> condition AND condition','condition',3,'p_condition','analizador.py',158),
  ('expression -> NUMBER','expression',1,'p_expression','analizador.py',165),
  ('expression -> DECIMAL','expression',1,'p_expression','analizador.py',166),
  ('expression -> ID','expression',1,'p_expression','analizador.py',167),
  ('input_statement -> INPUT LPAREN TEXT RPAREN SEMICOLON','input_statement',5,'p_input_statement','analizador.py',171),
  ('increment_statement -> ID PLUS SEMICOLON','increment_statement',3,'p_increment_statement','analizador.py',177),
]
